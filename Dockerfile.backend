# Base image for Rust
FROM rust:alpine AS builder

# Install required dependencies for Rust compilation
RUN apk add --no-cache musl-dev openssl-dev pkgconfig

# Set the working directory
WORKDIR /app

# Copy the Rust project files
COPY backend/Cargo.toml backend/Cargo.lock ./
COPY backend/src ./src
# TODO remove
COPY backend/certs ./certs

# Build the Rust application in release mode
RUN cargo generate-lockfile \
  && cargo build --release

# Production image
FROM alpine

# Install runtime dependencies
RUN apk add --no-cache libgcc libstdc++ ca-certificates openssl

# Set the working directory
WORKDIR /app

# Copy the built binary from the builder stage
COPY --from=builder /app/target/release/backend ./backend

# Copy static assets for serving
COPY frontend/build/client ./static

# Expose the server port
EXPOSE 3000

# Run the backend
CMD ["./backend"]
